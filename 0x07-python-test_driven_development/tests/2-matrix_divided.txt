>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 2, 3]], -5)
[[-0.2, -0.4, -0.6]]

>>> matrix_divided([[1, 2, 3], [],], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1], (1)], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1], [None]], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 1], [None]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1.000, 2.000, 3.000]], 1)
[[1.0, 2.0, 3.0]]

>>> matrix_divided([[1, 2, 3]], "Holberton")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3]], [1, 2, 3])
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3]], (1, ))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3]], None)
Traceback (most recent call last):
TypeError: div must be a number
